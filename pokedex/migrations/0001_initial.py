# Generated by Django 5.0.4 on 2024-06-16 15:48

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AuthGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=150, unique=True)),
            ],
            options={
                "db_table": "auth_group",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthGroupPermissions",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "auth_group_permissions",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthPermission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("codename", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "auth_permission",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128)),
                ("last_login", models.DateTimeField(blank=True, null=True)),
                ("is_superuser", models.IntegerField()),
                ("username", models.CharField(max_length=150, unique=True)),
                ("first_name", models.CharField(max_length=150)),
                ("last_name", models.CharField(max_length=150)),
                ("email", models.CharField(max_length=254)),
                ("is_staff", models.IntegerField()),
                ("is_active", models.IntegerField()),
                ("date_joined", models.DateTimeField()),
            ],
            options={
                "db_table": "auth_user",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthUserGroups",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "auth_user_groups",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthUserUserPermissions",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "auth_user_user_permissions",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoAdminLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("action_time", models.DateTimeField()),
                ("object_id", models.TextField(blank=True, null=True)),
                ("object_repr", models.CharField(max_length=200)),
                ("action_flag", models.PositiveSmallIntegerField()),
                ("change_message", models.TextField()),
            ],
            options={
                "db_table": "django_admin_log",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoContentType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("app_label", models.CharField(max_length=100)),
                ("model", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "django_content_type",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoMigrations",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("app", models.CharField(max_length=255)),
                ("name", models.CharField(max_length=255)),
                ("applied", models.DateTimeField()),
            ],
            options={
                "db_table": "django_migrations",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoSession",
            fields=[
                (
                    "session_key",
                    models.CharField(max_length=40, primary_key=True, serialize=False),
                ),
                ("session_data", models.TextField()),
                ("expire_date", models.DateTimeField()),
            ],
            options={
                "db_table": "django_session",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EggGroups",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("identifier", models.CharField(max_length=79)),
            ],
            options={
                "db_table": "egg_groups",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Items",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("identifier", models.CharField(max_length=79)),
                ("category_id", models.IntegerField()),
                ("cost", models.IntegerField()),
                ("fling_power", models.IntegerField(blank=True, null=True)),
                ("fling_effect_id", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "items",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Locations",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("region_id", models.IntegerField(blank=True, null=True)),
                ("identifier", models.CharField(max_length=79)),
            ],
            options={
                "db_table": "locations",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Moves",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("identifier", models.CharField(max_length=79)),
                ("generation_id", models.IntegerField()),
                ("type_id", models.IntegerField()),
                ("power", models.SmallIntegerField(blank=True, null=True)),
                ("pp", models.SmallIntegerField(blank=True, null=True)),
                ("accuracy", models.SmallIntegerField(blank=True, null=True)),
                ("priority", models.SmallIntegerField()),
                ("target_id", models.IntegerField()),
                ("damage_class_id", models.IntegerField()),
                ("effect_id", models.IntegerField()),
                ("effect_chance", models.IntegerField(blank=True, null=True)),
                ("contest_type_id", models.IntegerField(blank=True, null=True)),
                ("contest_effect_id", models.IntegerField(blank=True, null=True)),
                ("super_contest_effect_id", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "moves",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Pokemon",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("identifier", models.CharField(max_length=79)),
                ("species_id", models.IntegerField(blank=True, null=True)),
                ("height", models.IntegerField()),
                ("weight", models.IntegerField()),
                ("base_experience", models.IntegerField()),
                ("order", models.IntegerField()),
                ("is_default", models.IntegerField()),
            ],
            options={
                "db_table": "pokemon",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PokemonEggGroups",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("species_id", models.IntegerField()),
                ("egg_group_id", models.IntegerField()),
            ],
            options={
                "db_table": "pokemon_egg_groups",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PokemonFormGenerations",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pokemon_form_id", models.IntegerField()),
                ("generation_id", models.IntegerField()),
                ("game_index", models.IntegerField()),
            ],
            options={
                "db_table": "pokemon_form_generations",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PokemonMoves",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pokemon_id", models.IntegerField()),
                ("version_group_id", models.IntegerField()),
                ("move_id", models.IntegerField()),
                ("pokemon_move_method_id", models.IntegerField()),
                ("level", models.IntegerField()),
                ("order", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "pokemon_moves",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PokemonStats",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pokemon_id", models.IntegerField()),
                ("stat_id", models.IntegerField()),
                ("base_stat", models.IntegerField()),
                ("effort", models.IntegerField()),
            ],
            options={
                "db_table": "pokemon_stats",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PokemonTypes",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pokemon_id", models.IntegerField()),
                ("type_id", models.IntegerField()),
                ("slot", models.IntegerField()),
            ],
            options={
                "db_table": "pokemon_types",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Stats",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("damage_class_id", models.IntegerField(blank=True, null=True)),
                ("identifier", models.CharField(max_length=79)),
                ("is_battle_only", models.IntegerField()),
                ("game_index", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "stats",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Types",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("identifier", models.CharField(max_length=79)),
                ("generation_id", models.IntegerField()),
                ("damage_class_id", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "types",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserPokemon",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("user_id", models.IntegerField()),
                ("pokemon_id", models.IntegerField()),
            ],
            options={
                "db_table": "user_pokemon",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Users",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("email", models.CharField(max_length=320)),
                ("identifier", models.CharField(max_length=79)),
                ("password", models.CharField(max_length=320)),
            ],
            options={
                "db_table": "users",
                "managed": False,
            },
        ),
    ]
